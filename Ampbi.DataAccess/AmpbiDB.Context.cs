//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ampbi.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AmpbidevEntities : DbContext
    {
        public AmpbidevEntities()
            : base("name=AmpbidevEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AgentSummary> AgentSummaries { get; set; }
        public DbSet<dim_employee> dim_employee { get; set; }
        public DbSet<Dim_Employee_Details1> Dim_Employee_Details1 { get; set; }
        public DbSet<Dim_Employee1> Dim_Employee1 { get; set; }
        public DbSet<DynamicParameterList> DynamicParameterLists { get; set; }
        public DbSet<GoalData> GoalDatas { get; set; }
        public DbSet<ref_charts_axislabels> ref_charts_axislabels { get; set; }
        public DbSet<ref_LookupValues> ref_LookupValues { get; set; }
        public DbSet<ref_Modules> ref_Modules { get; set; }
        public DbSet<ref_programlist> ref_programlist { get; set; }
        public DbSet<ref_SecretQuestion> ref_SecretQuestion { get; set; }
        public DbSet<ref_UserType> ref_UserType { get; set; }
        public DbSet<statelist> statelists { get; set; }
        public DbSet<Stg_Dim_Employee> Stg_Dim_Employee { get; set; }
        public DbSet<SurveyQuestion> SurveyQuestions { get; set; }
        public DbSet<t_temp> t_temp { get; set; }
        public DbSet<tbl_AppLog> tbl_AppLog { get; set; }
        public DbSet<tbl_coaching> tbl_coaching { get; set; }
        public DbSet<tbl_Company> tbl_Company { get; set; }
        public DbSet<tbl_CompanyChartInfo> tbl_CompanyChartInfo { get; set; }
        public DbSet<tbl_companymodule> tbl_companymodule { get; set; }
        public DbSet<tbl_empcomparision> tbl_empcomparision { get; set; }
        public DbSet<tbl_empperfdata> tbl_empperfdata { get; set; }
        public DbSet<tbl_fact_empperf_All> tbl_fact_empperf_All { get; set; }
        public DbSet<tbl_fact_empperf_Daily> tbl_fact_empperf_Daily { get; set; }
        public DbSet<tbl_fact_empperf_Intraday> tbl_fact_empperf_Intraday { get; set; }
        public DbSet<tbl_fact_empperf_Monthly> tbl_fact_empperf_Monthly { get; set; }
        public DbSet<tbl_fact_empperf_weekly> tbl_fact_empperf_weekly { get; set; }
        public DbSet<tbl_FactCalls_All> tbl_FactCalls_All { get; set; }
        public DbSet<tbl_FactCalls_Daily> tbl_FactCalls_Daily { get; set; }
        public DbSet<tbl_FactCalls_Intraday> tbl_FactCalls_Intraday { get; set; }
        public DbSet<tbl_FactCalls_Monthly> tbl_FactCalls_Monthly { get; set; }
        public DbSet<tbl_FactCalls_Weekly> tbl_FactCalls_Weekly { get; set; }
        public DbSet<tbl_KPIMetric> tbl_KPIMetric { get; set; }
        public DbSet<tbl_KPIMetricGoal> tbl_KPIMetricGoal { get; set; }
        public DbSet<tbl_LicenceInfo> tbl_LicenceInfo { get; set; }
        public DbSet<tbl_licencemoduleInfo> tbl_licencemoduleInfo { get; set; }
        public DbSet<tbl_moodicontransaction> tbl_moodicontransaction { get; set; }
        public DbSet<tbl_noofchartsbydbcompany> tbl_noofchartsbydbcompany { get; set; }
        public DbSet<tbl_User> tbl_User { get; set; }
        public DbSet<tbl_UserRegistration> tbl_UserRegistration { get; set; }
        public DbSet<tbl_UserRegistrationFollowup> tbl_UserRegistrationFollowup { get; set; }
        public DbSet<temptrendchartview> temptrendchartviews { get; set; }
        public DbSet<UesSurveyData> UesSurveyDatas { get; set; }
    
        public virtual ObjectResult<getRegistrationFollowUpGridRecord_Result> getRegistrationFollowUpGridRecord()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRegistrationFollowUpGridRecord_Result>("getRegistrationFollowUpGridRecord");
        }
    
        public virtual int pgetturnaroundtime(Nullable<System.DateTime> d1, Nullable<System.DateTime> d2, ObjectParameter tattime)
        {
            var d1Parameter = d1.HasValue ?
                new ObjectParameter("d1", d1) :
                new ObjectParameter("d1", typeof(System.DateTime));
    
            var d2Parameter = d2.HasValue ?
                new ObjectParameter("d2", d2) :
                new ObjectParameter("d2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pgetturnaroundtime", d1Parameter, d2Parameter, tattime);
        }
    
        public virtual ObjectResult<sp_c3_perfdb_uessurvey_Result> sp_c3_perfdb_uessurvey(string companyguid, string location, Nullable<System.DateTime> trandate, string tranweek, Nullable<int> month, string interval, string teammanager, string agent, ObjectParameter retlob, ObjectParameter rettype, ObjectParameter goal, ObjectParameter actual)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var trandateParameter = trandate.HasValue ?
                new ObjectParameter("trandate", trandate) :
                new ObjectParameter("trandate", typeof(System.DateTime));
    
            var tranweekParameter = tranweek != null ?
                new ObjectParameter("tranweek", tranweek) :
                new ObjectParameter("tranweek", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_c3_perfdb_uessurvey_Result>("sp_c3_perfdb_uessurvey", companyguidParameter, locationParameter, trandateParameter, tranweekParameter, monthParameter, intervalParameter, teammanagerParameter, agentParameter, retlob, rettype, goal, actual);
        }
    
        public virtual ObjectResult<sp_c3_perfdb_uessurvey1_Result> sp_c3_perfdb_uessurvey1(string companyguid, string location, Nullable<System.DateTime> trandate, string tranweek, Nullable<int> month, string interval, string teammanager, string agent, ObjectParameter retlob, ObjectParameter rettype, ObjectParameter goal, ObjectParameter actual)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var trandateParameter = trandate.HasValue ?
                new ObjectParameter("trandate", trandate) :
                new ObjectParameter("trandate", typeof(System.DateTime));
    
            var tranweekParameter = tranweek != null ?
                new ObjectParameter("tranweek", tranweek) :
                new ObjectParameter("tranweek", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_c3_perfdb_uessurvey1_Result>("sp_c3_perfdb_uessurvey1", companyguidParameter, locationParameter, trandateParameter, tranweekParameter, monthParameter, intervalParameter, teammanagerParameter, agentParameter, retlob, rettype, goal, actual);
        }
    
        public virtual ObjectResult<sp_c3_perfdb_uessurvey3charts2_Result> sp_c3_perfdb_uessurvey3charts2(string companyguid, string charttype, string lob, string location, Nullable<System.DateTime> trandate, string t_Week, Nullable<int> month, string interval, string teammanager, string agent, ObjectParameter rettype, ObjectParameter actual)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var charttypeParameter = charttype != null ?
                new ObjectParameter("charttype", charttype) :
                new ObjectParameter("charttype", typeof(string));
    
            var lobParameter = lob != null ?
                new ObjectParameter("lob", lob) :
                new ObjectParameter("lob", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var trandateParameter = trandate.HasValue ?
                new ObjectParameter("trandate", trandate) :
                new ObjectParameter("trandate", typeof(System.DateTime));
    
            var t_WeekParameter = t_Week != null ?
                new ObjectParameter("T_Week", t_Week) :
                new ObjectParameter("T_Week", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_c3_perfdb_uessurvey3charts2_Result>("sp_c3_perfdb_uessurvey3charts2", companyguidParameter, charttypeParameter, lobParameter, locationParameter, trandateParameter, t_WeekParameter, monthParameter, intervalParameter, teammanagerParameter, agentParameter, rettype, actual);
        }
    
        public virtual ObjectResult<sp_c3_perfdb_uessurvey3charts2_bkp_Result> sp_c3_perfdb_uessurvey3charts2_bkp(string companyguid, string charttype, string location, Nullable<System.DateTime> trandate, string t_Week, Nullable<int> month, string interval, string teammanager, string agent, ObjectParameter rettype, ObjectParameter actual)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var charttypeParameter = charttype != null ?
                new ObjectParameter("charttype", charttype) :
                new ObjectParameter("charttype", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var trandateParameter = trandate.HasValue ?
                new ObjectParameter("trandate", trandate) :
                new ObjectParameter("trandate", typeof(System.DateTime));
    
            var t_WeekParameter = t_Week != null ?
                new ObjectParameter("T_Week", t_Week) :
                new ObjectParameter("T_Week", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_c3_perfdb_uessurvey3charts2_bkp_Result>("sp_c3_perfdb_uessurvey3charts2_bkp", companyguidParameter, charttypeParameter, locationParameter, trandateParameter, t_WeekParameter, monthParameter, intervalParameter, teammanagerParameter, agentParameter, rettype, actual);
        }
    
        public virtual ObjectResult<sp_c3_perfdb_uessurvey3charts2_goal_Result> sp_c3_perfdb_uessurvey3charts2_goal(string companyguid, string charttype, string lob, string location, Nullable<System.DateTime> trandate, string t_Week, Nullable<int> month, string interval, string teammanager, string agent, ObjectParameter rettype, ObjectParameter actual, Nullable<decimal> goal)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var charttypeParameter = charttype != null ?
                new ObjectParameter("charttype", charttype) :
                new ObjectParameter("charttype", typeof(string));
    
            var lobParameter = lob != null ?
                new ObjectParameter("lob", lob) :
                new ObjectParameter("lob", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var trandateParameter = trandate.HasValue ?
                new ObjectParameter("trandate", trandate) :
                new ObjectParameter("trandate", typeof(System.DateTime));
    
            var t_WeekParameter = t_Week != null ?
                new ObjectParameter("T_Week", t_Week) :
                new ObjectParameter("T_Week", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            var goalParameter = goal.HasValue ?
                new ObjectParameter("goal", goal) :
                new ObjectParameter("goal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_c3_perfdb_uessurvey3charts2_goal_Result>("sp_c3_perfdb_uessurvey3charts2_goal", companyguidParameter, charttypeParameter, lobParameter, locationParameter, trandateParameter, t_WeekParameter, monthParameter, intervalParameter, teammanagerParameter, agentParameter, rettype, actual, goalParameter);
        }
    
        public virtual ObjectResult<sp_c3_perfdb_uessurvey3chrts_Result> sp_c3_perfdb_uessurvey3chrts(string companyguid, string charttype, string lob, string location, Nullable<System.DateTime> trandate, string tranweek, Nullable<int> month, string interval, string teammanager, string agent, ObjectParameter retlob, ObjectParameter rettype, ObjectParameter goal, ObjectParameter actual)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var charttypeParameter = charttype != null ?
                new ObjectParameter("charttype", charttype) :
                new ObjectParameter("charttype", typeof(string));
    
            var lobParameter = lob != null ?
                new ObjectParameter("lob", lob) :
                new ObjectParameter("lob", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var trandateParameter = trandate.HasValue ?
                new ObjectParameter("trandate", trandate) :
                new ObjectParameter("trandate", typeof(System.DateTime));
    
            var tranweekParameter = tranweek != null ?
                new ObjectParameter("tranweek", tranweek) :
                new ObjectParameter("tranweek", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_c3_perfdb_uessurvey3chrts_Result>("sp_c3_perfdb_uessurvey3chrts", companyguidParameter, charttypeParameter, lobParameter, locationParameter, trandateParameter, tranweekParameter, monthParameter, intervalParameter, teammanagerParameter, agentParameter, retlob, rettype, goal, actual);
        }
    
        public virtual ObjectResult<sp_c3_perfdb_uessurvey3chrts_goal_Result> sp_c3_perfdb_uessurvey3chrts_goal(string companyguid, string charttype, string lob, string location, Nullable<System.DateTime> trandate, string tranweek, Nullable<int> month, string interval, string teammanager, string agent, ObjectParameter retlob, ObjectParameter rettype, ObjectParameter goal, ObjectParameter actual)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var charttypeParameter = charttype != null ?
                new ObjectParameter("charttype", charttype) :
                new ObjectParameter("charttype", typeof(string));
    
            var lobParameter = lob != null ?
                new ObjectParameter("lob", lob) :
                new ObjectParameter("lob", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var trandateParameter = trandate.HasValue ?
                new ObjectParameter("trandate", trandate) :
                new ObjectParameter("trandate", typeof(System.DateTime));
    
            var tranweekParameter = tranweek != null ?
                new ObjectParameter("tranweek", tranweek) :
                new ObjectParameter("tranweek", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_c3_perfdb_uessurvey3chrts_goal_Result>("sp_c3_perfdb_uessurvey3chrts_goal", companyguidParameter, charttypeParameter, lobParameter, locationParameter, trandateParameter, tranweekParameter, monthParameter, intervalParameter, teammanagerParameter, agentParameter, retlob, rettype, goal, actual);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_CheckUser(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_CheckUser", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_companyprofile_listofvalues_Result> sp_companyprofile_listofvalues(string companyGUID, string type)
        {
            var companyGUIDParameter = companyGUID != null ?
                new ObjectParameter("CompanyGUID", companyGUID) :
                new ObjectParameter("CompanyGUID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_companyprofile_listofvalues_Result>("sp_companyprofile_listofvalues", companyGUIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_dispmoduleaccess_Result> sp_dispmoduleaccess(string email, string companyguid, ObjectParameter employeename, ObjectParameter module, ObjectParameter accessdatetime)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_dispmoduleaccess_Result>("sp_dispmoduleaccess", emailParameter, companyguidParameter, employeename, module, accessdatetime);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_EmailExist(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_EmailExist", userNameParameter);
        }
    
        public virtual int sp_getAging_Chart1_Daily(string companyguid, Nullable<System.DateTime> reportdate, ObjectParameter platform, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_Daily", companyguidParameter, reportdateParameter, platform, aging);
        }
    
        public virtual int sp_getAging_Chart1_DataExport_Daily(string companyguid, Nullable<System.DateTime> reportdate, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_DataExport_Daily", companyguidParameter, reportdateParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart1_DataExport_Monthly(string companyguid, Nullable<int> month, Nullable<int> year, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_DataExport_Monthly", companyguidParameter, monthParameter, yearParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart1_DataExport_PTD(string companyguid, Nullable<System.DateTime> reportdate, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_DataExport_PTD", companyguidParameter, reportdateParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart1_DataExport_Weekly(string companyguid, Nullable<System.DateTime> reportdate, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_DataExport_Weekly", companyguidParameter, reportdateParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart1_Monthly(string companyguid, Nullable<int> month, Nullable<int> year, ObjectParameter platform, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_Monthly", companyguidParameter, monthParameter, yearParameter, platform, aging);
        }
    
        public virtual int sp_getAging_Chart1_PTD(string companyguid, ObjectParameter platform, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_PTD", companyguidParameter, platform, aging);
        }
    
        public virtual int sp_getAging_Chart1_Weekly(string companyguid, Nullable<System.DateTime> reportdate, ObjectParameter platform, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_Weekly", companyguidParameter, reportdateParameter, platform, aging);
        }
    
        public virtual int sp_getAging_Chart1_yearly(string companyguid, Nullable<int> year, ObjectParameter platform, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart1_yearly", companyguidParameter, yearParameter, platform, aging);
        }
    
        public virtual int sp_getAging_Chart2_Daily(string companyguid, string platform, Nullable<System.DateTime> reportdate, string agent, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_Daily", companyguidParameter, platformParameter, reportdateParameter, agentParameter, aging);
        }
    
        public virtual int sp_getAging_Chart2_DataExport_Daily(string companyguid, Nullable<System.DateTime> reportdate, string platform, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_DataExport_Daily", companyguidParameter, reportdateParameter, platformParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart2_DataExport_Monthly(string companyguid, Nullable<int> month, Nullable<int> year, string platform, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_DataExport_Monthly", companyguidParameter, monthParameter, yearParameter, platformParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart2_DataExport_PTD(string companyguid, Nullable<System.DateTime> reportdate, string platform, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_DataExport_PTD", companyguidParameter, reportdateParameter, platformParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart2_DataExport_Weekly(string companyguid, Nullable<System.DateTime> reportdate, string platform, ObjectParameter listorder, ObjectParameter detailrecord)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_DataExport_Weekly", companyguidParameter, reportdateParameter, platformParameter, listorder, detailrecord);
        }
    
        public virtual int sp_getAging_Chart2_Monthly(string companyguid, string platform, Nullable<int> month, Nullable<int> year, string agent, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_Monthly", companyguidParameter, platformParameter, monthParameter, yearParameter, agentParameter, aging);
        }
    
        public virtual int sp_getAging_Chart2_PTD(string companyguid, string platform, ObjectParameter agent, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_PTD", companyguidParameter, platformParameter, agent, aging);
        }
    
        public virtual int sp_getAging_Chart2_Weekly(string companyguid, string platform, Nullable<System.DateTime> reportdate, ObjectParameter agent, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_Weekly", companyguidParameter, platformParameter, reportdateParameter, agent, aging);
        }
    
        public virtual int sp_getAging_Chart2_yearly(string companyguid, string platform, Nullable<int> year, string agent, ObjectParameter aging)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getAging_Chart2_yearly", companyguidParameter, platformParameter, yearParameter, agentParameter, aging);
        }
    
        public virtual ObjectResult<sp_getchartaxislabels_Result> sp_getchartaxislabels(string companyguid, string modulename, string chartname, Nullable<int> chartno, ObjectParameter xaxislabel, ObjectParameter yaxislabel)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var modulenameParameter = modulename != null ?
                new ObjectParameter("modulename", modulename) :
                new ObjectParameter("modulename", typeof(string));
    
            var chartnameParameter = chartname != null ?
                new ObjectParameter("chartname", chartname) :
                new ObjectParameter("chartname", typeof(string));
    
            var chartnoParameter = chartno.HasValue ?
                new ObjectParameter("chartno", chartno) :
                new ObjectParameter("chartno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getchartaxislabels_Result>("sp_getchartaxislabels", companyguidParameter, modulenameParameter, chartnameParameter, chartnoParameter, xaxislabel, yaxislabel);
        }
    
        public virtual ObjectResult<sp_getKPIMenu_Result> sp_getKPIMenu(string companyguid, string internalExternal, ObjectParameter kPIID, ObjectParameter kPIName)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var internalExternalParameter = internalExternal != null ?
                new ObjectParameter("InternalExternal", internalExternal) :
                new ObjectParameter("InternalExternal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getKPIMenu_Result>("sp_getKPIMenu", companyguidParameter, internalExternalParameter, kPIID, kPIName);
        }
    
        public virtual ObjectResult<sp_getlistofvalues_Result> sp_getlistofvalues(string modulename, string columnname, ObjectParameter lkpseqid, ObjectParameter description, ObjectParameter finalAction, ObjectParameter writerecord)
        {
            var modulenameParameter = modulename != null ?
                new ObjectParameter("Modulename", modulename) :
                new ObjectParameter("Modulename", typeof(string));
    
            var columnnameParameter = columnname != null ?
                new ObjectParameter("Columnname", columnname) :
                new ObjectParameter("Columnname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getlistofvalues_Result>("sp_getlistofvalues", modulenameParameter, columnnameParameter, lkpseqid, description, finalAction, writerecord);
        }
    
        public virtual ObjectResult<string> sp_getMainMenu(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getMainMenu", emailParameter);
        }
    
        public virtual ObjectResult<sp_getParameterlist_Result> sp_getParameterlist(string companyGUID, string parametername)
        {
            var companyGUIDParameter = companyGUID != null ?
                new ObjectParameter("CompanyGUID", companyGUID) :
                new ObjectParameter("CompanyGUID", typeof(string));
    
            var parameternameParameter = parametername != null ?
                new ObjectParameter("parametername", parametername) :
                new ObjectParameter("parametername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getParameterlist_Result>("sp_getParameterlist", companyGUIDParameter, parameternameParameter);
        }
    
        public virtual ObjectResult<sp_getParameterlist_fortrend_Result> sp_getParameterlist_fortrend(string companyGUID, string parametername, string lOB, string site, string teammanager)
        {
            var companyGUIDParameter = companyGUID != null ?
                new ObjectParameter("CompanyGUID", companyGUID) :
                new ObjectParameter("CompanyGUID", typeof(string));
    
            var parameternameParameter = parametername != null ?
                new ObjectParameter("parametername", parametername) :
                new ObjectParameter("parametername", typeof(string));
    
            var lOBParameter = lOB != null ?
                new ObjectParameter("LOB", lOB) :
                new ObjectParameter("LOB", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getParameterlist_fortrend_Result>("sp_getParameterlist_fortrend", companyGUIDParameter, parameternameParameter, lOBParameter, siteParameter, teammanagerParameter);
        }
    
        public virtual ObjectResult<sp_getParameterlistforAgent_Result> sp_getParameterlistforAgent(string companyGUID, string email, string modulename, string dashboardname, string parametername)
        {
            var companyGUIDParameter = companyGUID != null ?
                new ObjectParameter("CompanyGUID", companyGUID) :
                new ObjectParameter("CompanyGUID", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var modulenameParameter = modulename != null ?
                new ObjectParameter("modulename", modulename) :
                new ObjectParameter("modulename", typeof(string));
    
            var dashboardnameParameter = dashboardname != null ?
                new ObjectParameter("dashboardname", dashboardname) :
                new ObjectParameter("dashboardname", typeof(string));
    
            var parameternameParameter = parametername != null ?
                new ObjectParameter("parametername", parametername) :
                new ObjectParameter("parametername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getParameterlistforAgent_Result>("sp_getParameterlistforAgent", companyGUIDParameter, emailParameter, modulenameParameter, dashboardnameParameter, parameternameParameter);
        }
    
        public virtual ObjectResult<sp_getprogram_Result> sp_getprogram(string companyguid, ObjectParameter programid, ObjectParameter programname)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getprogram_Result>("sp_getprogram", companyguidParameter, programid, programname);
        }
    
        public virtual int sp_getslidervalues(string interval)
        {
            var intervalParameter = interval != null ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getslidervalues", intervalParameter);
        }
    
        public virtual int sp_gettat_Chart1_Daily(string companyguid, Nullable<System.DateTime> reportdate, ObjectParameter platform, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart1_Daily", companyguidParameter, reportdateParameter, platform, tat);
        }
    
        public virtual int sp_gettat_Chart1_Monthly(string companyguid, Nullable<int> month, Nullable<int> year, ObjectParameter platform, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart1_Monthly", companyguidParameter, monthParameter, yearParameter, platform, tat);
        }
    
        public virtual int sp_gettat_Chart1_PTD(string companyguid, ObjectParameter platform, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart1_PTD", companyguidParameter, platform, tat);
        }
    
        public virtual int sp_gettat_Chart1_Weekly(string companyguid, Nullable<System.DateTime> reportdate, ObjectParameter platform, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart1_Weekly", companyguidParameter, reportdateParameter, platform, tat);
        }
    
        public virtual int sp_gettat_Chart1_yearly(string companyguid, Nullable<int> year, ObjectParameter platform, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart1_yearly", companyguidParameter, yearParameter, platform, tat);
        }
    
        public virtual int sp_gettat_Chart3_Daily(string companyguid, string platform, Nullable<System.DateTime> reportdate, ObjectParameter agent, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart3_Daily", companyguidParameter, platformParameter, reportdateParameter, agent, tat);
        }
    
        public virtual int sp_gettat_Chart3_Monthly(string companyguid, string platform, Nullable<int> month, Nullable<int> year, ObjectParameter agent, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart3_Monthly", companyguidParameter, platformParameter, monthParameter, yearParameter, agent, tat);
        }
    
        public virtual int sp_gettat_Chart3_PTD(string companyguid, string platform, ObjectParameter agent, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart3_PTD", companyguidParameter, platformParameter, agent, tat);
        }
    
        public virtual int sp_gettat_Chart3_Weekly(string companyguid, string platform, Nullable<System.DateTime> reportdate, ObjectParameter agent, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var reportdateParameter = reportdate.HasValue ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart3_Weekly", companyguidParameter, platformParameter, reportdateParameter, agent, tat);
        }
    
        public virtual int sp_gettat_Chart3_yearly(string companyguid, string platform, Nullable<int> year, ObjectParameter agent, ObjectParameter tat)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_gettat_Chart3_yearly", companyguidParameter, platformParameter, yearParameter, agent, tat);
        }
    
        public virtual int Sp_ins_acessrecord(string modulename, string userName, string companyGuid)
        {
            var modulenameParameter = modulename != null ?
                new ObjectParameter("Modulename", modulename) :
                new ObjectParameter("Modulename", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var companyGuidParameter = companyGuid != null ?
                new ObjectParameter("companyGuid", companyGuid) :
                new ObjectParameter("companyGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ins_acessrecord", modulenameParameter, userNameParameter, companyGuidParameter);
        }
    
        public virtual int sp_insertregnflwpoutcomerecord(string outcome, string companyguid, string contactname, string email, string notes, string contactedby, Nullable<int> noofemployee, Nullable<int> nooflicence, string companyname, string contactphone, string address1, string address2, string city, string state, Nullable<int> zip, string prefferedContactmethod, Nullable<bool> calldashboard, Nullable<bool> ticketdashboard, Nullable<bool> qadashboard, Nullable<bool> virtualassistant, Nullable<bool> employeeperformance, Nullable<bool> appointmentsdashboard, Nullable<bool> knowledgebase, Nullable<bool> performancedashboard, string createdby)
        {
            var outcomeParameter = outcome != null ?
                new ObjectParameter("outcome", outcome) :
                new ObjectParameter("outcome", typeof(string));
    
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var contactnameParameter = contactname != null ?
                new ObjectParameter("contactname", contactname) :
                new ObjectParameter("contactname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var contactedbyParameter = contactedby != null ?
                new ObjectParameter("contactedby", contactedby) :
                new ObjectParameter("contactedby", typeof(string));
    
            var noofemployeeParameter = noofemployee.HasValue ?
                new ObjectParameter("noofemployee", noofemployee) :
                new ObjectParameter("noofemployee", typeof(int));
    
            var nooflicenceParameter = nooflicence.HasValue ?
                new ObjectParameter("nooflicence", nooflicence) :
                new ObjectParameter("nooflicence", typeof(int));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var contactphoneParameter = contactphone != null ?
                new ObjectParameter("contactphone", contactphone) :
                new ObjectParameter("contactphone", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(int));
    
            var prefferedContactmethodParameter = prefferedContactmethod != null ?
                new ObjectParameter("PrefferedContactmethod", prefferedContactmethod) :
                new ObjectParameter("PrefferedContactmethod", typeof(string));
    
            var calldashboardParameter = calldashboard.HasValue ?
                new ObjectParameter("calldashboard", calldashboard) :
                new ObjectParameter("calldashboard", typeof(bool));
    
            var ticketdashboardParameter = ticketdashboard.HasValue ?
                new ObjectParameter("ticketdashboard", ticketdashboard) :
                new ObjectParameter("ticketdashboard", typeof(bool));
    
            var qadashboardParameter = qadashboard.HasValue ?
                new ObjectParameter("qadashboard", qadashboard) :
                new ObjectParameter("qadashboard", typeof(bool));
    
            var virtualassistantParameter = virtualassistant.HasValue ?
                new ObjectParameter("virtualassistant", virtualassistant) :
                new ObjectParameter("virtualassistant", typeof(bool));
    
            var employeeperformanceParameter = employeeperformance.HasValue ?
                new ObjectParameter("employeeperformance", employeeperformance) :
                new ObjectParameter("employeeperformance", typeof(bool));
    
            var appointmentsdashboardParameter = appointmentsdashboard.HasValue ?
                new ObjectParameter("appointmentsdashboard", appointmentsdashboard) :
                new ObjectParameter("appointmentsdashboard", typeof(bool));
    
            var knowledgebaseParameter = knowledgebase.HasValue ?
                new ObjectParameter("knowledgebase", knowledgebase) :
                new ObjectParameter("knowledgebase", typeof(bool));
    
            var performancedashboardParameter = performancedashboard.HasValue ?
                new ObjectParameter("performancedashboard", performancedashboard) :
                new ObjectParameter("performancedashboard", typeof(bool));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertregnflwpoutcomerecord", outcomeParameter, companyguidParameter, contactnameParameter, emailParameter, notesParameter, contactedbyParameter, noofemployeeParameter, nooflicenceParameter, companynameParameter, contactphoneParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, zipParameter, prefferedContactmethodParameter, calldashboardParameter, ticketdashboardParameter, qadashboardParameter, virtualassistantParameter, employeeperformanceParameter, appointmentsdashboardParameter, knowledgebaseParameter, performancedashboardParameter, createdbyParameter);
        }
    
        public virtual int sp_move_employeefromStaging()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_move_employeefromStaging");
        }
    
        public virtual ObjectResult<sp_pfdb_trendchart_daily_Result> sp_pfdb_trendchart_daily(string companyguid, string metric, string lOB, string site, string teammanager, string agent, Nullable<System.DateTime> recdate, ObjectParameter dispdate, ObjectParameter showvalue, ObjectParameter sno, ObjectParameter score)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var metricParameter = metric != null ?
                new ObjectParameter("metric", metric) :
                new ObjectParameter("metric", typeof(string));
    
            var lOBParameter = lOB != null ?
                new ObjectParameter("LOB", lOB) :
                new ObjectParameter("LOB", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            var recdateParameter = recdate.HasValue ?
                new ObjectParameter("Recdate", recdate) :
                new ObjectParameter("Recdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_pfdb_trendchart_daily_Result>("sp_pfdb_trendchart_daily", companyguidParameter, metricParameter, lOBParameter, siteParameter, teammanagerParameter, agentParameter, recdateParameter, dispdate, showvalue, sno, score);
        }
    
        public virtual ObjectResult<sp_pfdb_trendchart_daily_drilldown_Result> sp_pfdb_trendchart_daily_drilldown(string companyguid, string metric, string lOB, string site, string teammanager, string agent, Nullable<System.DateTime> recdate, Nullable<int> interval, ObjectParameter showvalue, ObjectParameter sno, ObjectParameter score)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var metricParameter = metric != null ?
                new ObjectParameter("metric", metric) :
                new ObjectParameter("metric", typeof(string));
    
            var lOBParameter = lOB != null ?
                new ObjectParameter("LOB", lOB) :
                new ObjectParameter("LOB", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            var recdateParameter = recdate.HasValue ?
                new ObjectParameter("Recdate", recdate) :
                new ObjectParameter("Recdate", typeof(System.DateTime));
    
            var intervalParameter = interval.HasValue ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_pfdb_trendchart_daily_drilldown_Result>("sp_pfdb_trendchart_daily_drilldown", companyguidParameter, metricParameter, lOBParameter, siteParameter, teammanagerParameter, agentParameter, recdateParameter, intervalParameter, showvalue, sno, score);
        }
    
        public virtual ObjectResult<sp_pfdb_trendchart_monthly_Result> sp_pfdb_trendchart_monthly(string companyguid, string metric, string lOB, string site, string teammanager, string agent, Nullable<int> recmonth, ObjectParameter dispdate, ObjectParameter showvalue, ObjectParameter sno, ObjectParameter score)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var metricParameter = metric != null ?
                new ObjectParameter("metric", metric) :
                new ObjectParameter("metric", typeof(string));
    
            var lOBParameter = lOB != null ?
                new ObjectParameter("LOB", lOB) :
                new ObjectParameter("LOB", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            var recmonthParameter = recmonth.HasValue ?
                new ObjectParameter("Recmonth", recmonth) :
                new ObjectParameter("Recmonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_pfdb_trendchart_monthly_Result>("sp_pfdb_trendchart_monthly", companyguidParameter, metricParameter, lOBParameter, siteParameter, teammanagerParameter, agentParameter, recmonthParameter, dispdate, showvalue, sno, score);
        }
    
        public virtual ObjectResult<sp_pfdb_trendchart_monthly_drilldown_Result> sp_pfdb_trendchart_monthly_drilldown(string companyguid, string metric, string lOB, string site, string teammanager, string agent, Nullable<int> recmonth, Nullable<int> recyear, ObjectParameter retdate, ObjectParameter showvalue, ObjectParameter sno, ObjectParameter score)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var metricParameter = metric != null ?
                new ObjectParameter("metric", metric) :
                new ObjectParameter("metric", typeof(string));
    
            var lOBParameter = lOB != null ?
                new ObjectParameter("LOB", lOB) :
                new ObjectParameter("LOB", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            var recmonthParameter = recmonth.HasValue ?
                new ObjectParameter("Recmonth", recmonth) :
                new ObjectParameter("Recmonth", typeof(int));
    
            var recyearParameter = recyear.HasValue ?
                new ObjectParameter("recyear", recyear) :
                new ObjectParameter("recyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_pfdb_trendchart_monthly_drilldown_Result>("sp_pfdb_trendchart_monthly_drilldown", companyguidParameter, metricParameter, lOBParameter, siteParameter, teammanagerParameter, agentParameter, recmonthParameter, recyearParameter, retdate, showvalue, sno, score);
        }
    
        public virtual ObjectResult<sp_pfdb_trendchart_weekly_Result> sp_pfdb_trendchart_weekly(string companyguid, string metric, string lOB, string site, string teammanager, string agent, Nullable<System.DateTime> wkstartdate, ObjectParameter dispdate, ObjectParameter showvalue, ObjectParameter sno, ObjectParameter score)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var metricParameter = metric != null ?
                new ObjectParameter("metric", metric) :
                new ObjectParameter("metric", typeof(string));
    
            var lOBParameter = lOB != null ?
                new ObjectParameter("LOB", lOB) :
                new ObjectParameter("LOB", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            var wkstartdateParameter = wkstartdate.HasValue ?
                new ObjectParameter("wkstartdate", wkstartdate) :
                new ObjectParameter("wkstartdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_pfdb_trendchart_weekly_Result>("sp_pfdb_trendchart_weekly", companyguidParameter, metricParameter, lOBParameter, siteParameter, teammanagerParameter, agentParameter, wkstartdateParameter, dispdate, showvalue, sno, score);
        }
    
        public virtual ObjectResult<sp_pfdb_trendchart_weekly_drilldown_Result> sp_pfdb_trendchart_weekly_drilldown(string companyguid, string metric, string lOB, string site, string teammanager, string agent, Nullable<System.DateTime> wkstartdate, ObjectParameter retdate, ObjectParameter showvalue, ObjectParameter sno, ObjectParameter score)
        {
            var companyguidParameter = companyguid != null ?
                new ObjectParameter("companyguid", companyguid) :
                new ObjectParameter("companyguid", typeof(string));
    
            var metricParameter = metric != null ?
                new ObjectParameter("metric", metric) :
                new ObjectParameter("metric", typeof(string));
    
            var lOBParameter = lOB != null ?
                new ObjectParameter("LOB", lOB) :
                new ObjectParameter("LOB", typeof(string));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var teammanagerParameter = teammanager != null ?
                new ObjectParameter("teammanager", teammanager) :
                new ObjectParameter("teammanager", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            var wkstartdateParameter = wkstartdate.HasValue ?
                new ObjectParameter("wkstartdate", wkstartdate) :
                new ObjectParameter("wkstartdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_pfdb_trendchart_weekly_drilldown_Result>("sp_pfdb_trendchart_weekly_drilldown", companyguidParameter, metricParameter, lOBParameter, siteParameter, teammanagerParameter, agentParameter, wkstartdateParameter, retdate, showvalue, sno, score);
        }
    
        public virtual int sp_QADBListofValues(string companyGUID, string type)
        {
            var companyGUIDParameter = companyGUID != null ?
                new ObjectParameter("CompanyGUID", companyGUID) :
                new ObjectParameter("CompanyGUID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_QADBListofValues", companyGUIDParameter, typeParameter);
        }
    
        public virtual int sp_qaperf_mlydata(string companyGUID, string employeename, string question, Nullable<int> reportmonth, Nullable<int> reportyear, Nullable<int> chartno, string displevel1, string displevel2, string displevel3)
        {
            var companyGUIDParameter = companyGUID != null ?
                new ObjectParameter("CompanyGUID", companyGUID) :
                new ObjectParameter("CompanyGUID", typeof(string));
    
            var employeenameParameter = employeename != null ?
                new ObjectParameter("employeename", employeename) :
                new ObjectParameter("employeename", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var reportmonthParameter = reportmonth.HasValue ?
                new ObjectParameter("reportmonth", reportmonth) :
                new ObjectParameter("reportmonth", typeof(int));
    
            var reportyearParameter = reportyear.HasValue ?
                new ObjectParameter("reportyear", reportyear) :
                new ObjectParameter("reportyear", typeof(int));
    
            var chartnoParameter = chartno.HasValue ?
                new ObjectParameter("chartno", chartno) :
                new ObjectParameter("chartno", typeof(int));
    
            var displevel1Parameter = displevel1 != null ?
                new ObjectParameter("Displevel1", displevel1) :
                new ObjectParameter("Displevel1", typeof(string));
    
            var displevel2Parameter = displevel2 != null ?
                new ObjectParameter("Displevel2", displevel2) :
                new ObjectParameter("Displevel2", typeof(string));
    
            var displevel3Parameter = displevel3 != null ?
                new ObjectParameter("Displevel3", displevel3) :
                new ObjectParameter("Displevel3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_qaperf_mlydata", companyGUIDParameter, employeenameParameter, questionParameter, reportmonthParameter, reportyearParameter, chartnoParameter, displevel1Parameter, displevel2Parameter, displevel3Parameter);
        }
    
        public virtual int sp_trunc_stgdimemployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_trunc_stgdimemployee");
        }
    }
}
